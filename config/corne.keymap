/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        blt_layer {
            bindings = <&mo 3>;
            key-positions = <40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R         &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F         &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V         &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &kp LEFT_ALT  &kp SPACE    &kp RET  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp PLUS   &kp ASTERISK  &kp N7    &kp N8        &kp N9       &kp F7    &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
&kp RCTRL  &kp MINUS  &kp SLASH     &kp N4    &kp N5        &kp N6       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&kp LSHFT  &kp EQUAL  &kp N0        &kp N1    &kp N2        &kp N3       &kp F1    &kp F2    &kp F3  &kp F4     &kp F5   &kp F6
                                    &kp LGUI  &kp LEFT_ALT  &kp SPACE    &kp RET   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp HOME     &kp END                &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE  &kp DEL
&kp LCTRL  &kp PAGE_UP  &kp PAGE_DOWN          &kp DOLLAR       &kp PERCENT   &kp CARET               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LBKT           &kp RBKT         &kp TILDE   &kp GRAVE
&kp LSHFT  &kp INSERT   &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH                &kp UNDER             &kp MINUS              &kp C_BRI_DEC      &kp C_BRI_INC    &kp PIPE    &kp BACKSLASH
                                               &kp LGUI         &kp LEFT_ALT  &kp SPACE               &kp RET               &trans                 &trans
            >;
        };

        blt_layer {
            bindings = <
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans      &trans  &trans  &trans
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_NXT  &bt BT_PRV  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans      &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans      &trans
            >;
        };
    };
};
